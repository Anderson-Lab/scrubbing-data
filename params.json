{"name":"Scrubbing Data","tagline":"Command Line Scrubbing and Cleaning","body":"\r\n# Scrubbing Data\r\nNot uncommon for data to have\r\n- Missing values\r\n- Uninteresting columns\r\n- Weird Characters\r\n- Errors\r\n- Inconsistencies\r\n\r\nOther times we sometimes only need some of the data, or we can't handle the data in the current format.\r\n\r\n## Formats\r\n- XML/HTML - specification\r\n- JSON - specification\r\n- CSV - no specification\r\n\r\nSpecifications are great for machines! \r\n\r\n## Scrubing Options\r\n- Filtering\r\n- Replacing\r\n- Merging\r\n- etc\r\n\r\n## Tools from this chapter\r\n- cut\r\n- sed\r\n- csvgrep\r\n- jq\r\n- awk\r\n- header\r\n\r\n## Example\r\n\r\n\r\n```bash\r\nexport PATH=$PATH:~/data-science-at-the-command-line/tools\r\n```\r\n\r\n    \r\n\r\n\r\n```bash\r\necho -e 'foo\\nbar\\nfoo' | sort | uniq -c | sort -nr | awk '{print $2\",\"$1}' | header -a value,count\r\n```\r\n\r\n    value,count\r\n    foo,2\r\n    bar,1\r\n\r\n\r\n### csvsql - We will skip this in the chapter\r\n\r\n## Common Scrub\r\n### Operations for Plain Text\r\n- logs\r\n- emails\r\n- ebooks\r\n- web\r\n\r\n### Filtering Lines\r\n#### Based on location\r\n- head\r\n- sed\r\n- awk\r\n\r\n#### Based on pattern\r\n- grep\r\n\r\n#### Regular expressions\r\n- . means any character\r\n- \\* means 0 or more\r\n- ^ means the beginning of the line\r\n- $ means the end of the line\r\n- \\+ means 1 or more\r\n\r\n#### Based on Randomness\r\n- sample\r\n\r\n#### Extracting values and slicing lines\r\n- cut - split on spaces or specified delimiter. Can also split on fixed number of characters\r\n- can achieve similar results with awk and sed\r\n\r\n#### Replacing and Deleting Values\r\n- tr\r\n\r\n## Working with CSV\r\n- body\r\n- cols\r\n- header\r\n\r\n## Working with HTML/XML and JSON\r\n- JSON and HTML/XML can have deeply nested structures\r\n- All three are very common and there are programs that can read all of these\r\n\r\nSometimes we can use traditional tools such as sed, but we often need specialized tools\r\n- xml2json\r\n- json2csv\r\n- jq\r\n- scrape\r\n\r\n## Operations for CSVs\r\n### Extracting Columns\r\n- csvcut\r\n\r\n### Filtering Lines\r\n- csvgrep\r\n- Why not use just grep? Answer: You may want to target a specific column\r\n\r\n### Merging Columns\r\n- When values of interest are spread across multiple columns\r\n- e.g., last name \\+ full name\r\n\r\n### Combining multiple csv files\r\n#### Vertically\r\n- csvstack\r\n\r\n#### Horizontally\r\n- csvcut \\- side by side\r\n- csvjoin \\- match by column","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}